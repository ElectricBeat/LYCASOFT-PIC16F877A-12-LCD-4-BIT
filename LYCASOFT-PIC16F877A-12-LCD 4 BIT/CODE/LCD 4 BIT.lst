

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Oct 24 13:54:19 2018

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
    45  2007  3F3A               	dw 0X3F3A ;#
    46                           	FNCALL	_main,_Lcd_Intialization
    47                           	FNCALL	_main,_Lcd_Command
    48                           	FNCALL	_main,_Lcd_String
    49                           	FNCALL	_Lcd_Intialization,_Lcd_Command
    50                           	FNCALL	_Lcd_String,_Lcd_Data
    51                           	FNROOT	_main
    52                           	global	_PORTC
    53                           psect	text100,local,class=CODE,delta=2
    54                           global __ptext100
    55  0000                     __ptext100:
    56  0007                     _PORTC	set	7
    57                           	global	_PORTD
    58  0008                     _PORTD	set	8
    59                           	global	_CARRY
    60  0018                     _CARRY	set	24
    61                           	global	_GIE
    62  005F                     _GIE	set	95
    63                           	global	_RD2
    64  0042                     _RD2	set	66
    65                           	global	_RD3
    66  0043                     _RD3	set	67
    67                           	global	_TRISC
    68  0087                     _TRISC	set	135
    69                           	global	_TRISD
    70  0088                     _TRISD	set	136
    71                           	global	_EEADR
    72  010D                     _EEADR	set	269
    73                           	global	_EEDATA
    74  010C                     _EEDATA	set	268
    75                           	global	_EECON1
    76  018C                     _EECON1	set	396
    77                           	global	_EECON2
    78  018D                     _EECON2	set	397
    79                           	global	_RD
    80  0C60                     _RD	set	3168
    81                           	global	_WR
    82  0C61                     _WR	set	3169
    83                           	global	_WREN
    84  0C62                     _WREN	set	3170
    85                           psect	strings,class=STRING,delta=2
    86                           global __pstrings
    87  0003                     __pstrings:
    88                           ;	global	stringdir,stringtab,__stringbase
    89  0003                     stringtab:
    90                           ;	String table - string pointers are 1 byte each
    91  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
    92  0003  3000               movlw high(stringdir)
    93  0004  008A               movwf pclath
    94  0005  0804               movf fsr,w
    95  0006  0A84               incf fsr
    96  0007  0782               	addwf pc
    97  0008                     __stringbase:
    98  0008  3400               	retlw	0
    99                           psect	strings
   100                           	
   101  0009                     STR_1:	
   102  0009  344C               	retlw	76	;'L'
   103  000A  3459               	retlw	89	;'Y'
   104  000B  3443               	retlw	67	;'C'
   105  000C  3441               	retlw	65	;'A'
   106  000D  3420               	retlw	32	;' '
   107  000E  3453               	retlw	83	;'S'
   108  000F  344F               	retlw	79	;'O'
   109  0010  3446               	retlw	70	;'F'
   110  0011  3454               	retlw	84	;'T'
   111  0012  3400               	retlw	0
   112                           psect	strings
   113                           	file	"LCD 4 BIT.as"
   114                           	line	#
   115                           psect cinit,class=CODE,delta=2
   116                           global start_initialization
   117  0738                     start_initialization:
   118                           
   119                           psect cinit,class=CODE,delta=2
   120                           global end_of_initialization
   121                           
   122                           ;End of C runtime variable initialization code
   123                           
   124  0738                     end_of_initialization:
   125  0738  0183               clrf status
   126  0739  120A  118A  2FCE   ljmp _main	;jump to C main() function
   127                           psect	cstackCOMMON,class=COMMON,space=1
   128                           global __pcstackCOMMON
   129  0070                     __pcstackCOMMON:
   130                           	global	?_Lcd_Command
   131  0070                     ?_Lcd_Command:	; 0 bytes @ 0x0
   132                           	global	??_Lcd_Command
   133  0070                     ??_Lcd_Command:	; 0 bytes @ 0x0
   134                           	global	?_Lcd_Data
   135  0070                     ?_Lcd_Data:	; 0 bytes @ 0x0
   136                           	global	??_Lcd_Data
   137  0070                     ??_Lcd_Data:	; 0 bytes @ 0x0
   138                           	global	?_Lcd_String
   139  0070                     ?_Lcd_String:	; 0 bytes @ 0x0
   140                           	global	?_Lcd_Intialization
   141  0070                     ?_Lcd_Intialization:	; 0 bytes @ 0x0
   142                           	global	?_main
   143  0070                     ?_main:	; 0 bytes @ 0x0
   144  0070                     	ds	2
   145                           	global	Lcd_Command@cmd
   146  0072                     Lcd_Command@cmd:	; 1 bytes @ 0x2
   147                           	global	Lcd_Data@Data
   148  0072                     Lcd_Data@Data:	; 1 bytes @ 0x2
   149  0072                     	ds	1
   150                           	global	??_Lcd_String
   151  0073                     ??_Lcd_String:	; 0 bytes @ 0x3
   152                           	global	??_Lcd_Intialization
   153  0073                     ??_Lcd_Intialization:	; 0 bytes @ 0x3
   154  0073                     	ds	1
   155                           	global	Lcd_String@Str
   156  0074                     Lcd_String@Str:	; 1 bytes @ 0x4
   157  0074                     	ds	1
   158                           	global	??_main
   159  0075                     ??_main:	; 0 bytes @ 0x5
   160  0075                     	ds	2
   161 ;;Data sizes: Strings 10, constant 0, data 0, bss 0, persistent 0 stack 0
   162 ;;Auto spaces:   Size  Autos    Used
   163 ;; COMMON          14      7       7
   164 ;; BANK0           80      0       0
   165 ;; BANK1           80      0       0
   166 ;; BANK3           96      0       0
   167 ;; BANK2           96      0       0
   168                           
   169 ;;
   170 ;; Pointer list with targets:
   171                           
   172 ;; Lcd_String@Str	PTR const unsigned char  size(1) Largest target is 10
   173 ;;		 -> STR_1(CODE[10]), 
   174 ;;
   175                           
   176                           
   177 ;;
   178 ;; Critical Paths under _main in COMMON
   179 ;;
   180 ;;   _main->_Lcd_String
   181 ;;   _Lcd_Intialization->_Lcd_Command
   182 ;;   _Lcd_String->_Lcd_Data
   183 ;;
   184 ;; Critical Paths under _main in BANK0
   185 ;;
   186 ;;   None.
   187 ;;
   188 ;; Critical Paths under _main in BANK1
   189 ;;
   190 ;;   None.
   191 ;;
   192 ;; Critical Paths under _main in BANK3
   193 ;;
   194 ;;   None.
   195 ;;
   196 ;; Critical Paths under _main in BANK2
   197 ;;
   198 ;;   None.
   199                           
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   202 ;;
   203                           
   204 ;;
   205 ;;Call Graph Tables:
   206 ;;
   207 ;; ---------------------------------------------------------------------------------
   208 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   209 ;; ---------------------------------------------------------------------------------
   210 ;; (0) _main                                                 2     2      0     120
   211 ;;                                              5 COMMON     2     2      0
   212 ;;                  _Lcd_Intialization
   213 ;;                        _Lcd_Command
   214 ;;                         _Lcd_String
   215 ;; ---------------------------------------------------------------------------------
   216 ;; (1) _Lcd_Intialization                                    0     0      0      30
   217 ;;                        _Lcd_Command
   218 ;; ---------------------------------------------------------------------------------
   219 ;; (1) _Lcd_String                                           2     2      0      60
   220 ;;                                              3 COMMON     2     2      0
   221 ;;                           _Lcd_Data
   222 ;; ---------------------------------------------------------------------------------
   223 ;; (2) _Lcd_Data                                             3     3      0      30
   224 ;;                                              0 COMMON     3     3      0
   225 ;; ---------------------------------------------------------------------------------
   226 ;; (1) _Lcd_Command                                          3     3      0      30
   227 ;;                                              0 COMMON     3     3      0
   228 ;; ---------------------------------------------------------------------------------
   229 ;; Estimated maximum stack depth 2
   230 ;; ---------------------------------------------------------------------------------
   231                           
   232 ;; Call Graph Graphs:
   233                           
   234 ;; _main (ROOT)
   235 ;;   _Lcd_Intialization
   236 ;;     _Lcd_Command
   237 ;;   _Lcd_Command
   238 ;;   _Lcd_String
   239 ;;     _Lcd_Data
   240 ;;
   241                           
   242 ;; Address spaces:
   243                           
   244 ;;Name               Size   Autos  Total    Cost      Usage
   245 ;;BITCOMMON            E      0       0       0        0.0%
   246 ;;EEDATA             100      0       0       0        0.0%
   247 ;;NULL                 0      0       0       0        0.0%
   248 ;;CODE                 0      0       0       0        0.0%
   249 ;;COMMON               E      7       7       1       50.0%
   250 ;;BITSFR0              0      0       0       1        0.0%
   251 ;;SFR0                 0      0       0       1        0.0%
   252 ;;BITSFR1              0      0       0       2        0.0%
   253 ;;SFR1                 0      0       0       2        0.0%
   254 ;;STACK                0      0       2       2        0.0%
   255 ;;ABS                  0      0       0       3        0.0%
   256 ;;BITBANK0            50      0       0       4        0.0%
   257 ;;BITSFR3              0      0       0       4        0.0%
   258 ;;SFR3                 0      0       0       4        0.0%
   259 ;;BANK0               50      0       0       5        0.0%
   260 ;;BITSFR2              0      0       0       5        0.0%
   261 ;;SFR2                 0      0       0       5        0.0%
   262 ;;BITBANK1            50      0       0       6        0.0%
   263 ;;BANK1               50      0       0       7        0.0%
   264 ;;BITBANK3            60      0       0       8        0.0%
   265 ;;BANK3               60      0       0       9        0.0%
   266 ;;BITBANK2            60      0       0      10        0.0%
   267 ;;BANK2               60      0       0      11        0.0%
   268 ;;DATA                 0      0       0      12        0.0%
   269                           
   270                           	global	_main
   271                           psect	maintext,global,class=CODE,delta=2
   272                           global __pmaintext
   273  07CE                     __pmaintext:
   274                           
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 58 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;		None               void
   284 ;; Registers used:
   285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 17F/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   291 ;;      Params:         0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0
   293 ;;      Temps:          2       0       0       0       0
   294 ;;      Totals:         2       0       0       0       0
   295 ;;Total ram usage:        2 bytes
   296 ;; Hardware stack levels required when called:    2
   297 ;; This function calls:
   298 ;;		_Lcd_Intialization
   299 ;;		_Lcd_Command
   300 ;;		_Lcd_String
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           psect	maintext
   306                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   307                           	line	58
   308                           	global	__size_of_main
   309  0032                     	__size_of_main	equ	__end_of_main-_main
   310                           	
   311  07CE                     _main:	
   312                           	opt	stack 6
   313                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   314                           	line	59
   315                           	
   316  07CE                     l2660:	
   317                           ;LCD 4 BIT.c: 59: TRISD=0X00;
   318  07CE  1683               	bsf	status, 5	;RP0=1, select bank1
   319  07CF  1303               	bcf	status, 6	;RP1=0, select bank1
   320  07D0  0188               	clrf	(136)^080h	;volatile
   321                           	line	60
   322                           ;LCD 4 BIT.c: 60: PORTD=0X00;
   323  07D1  1283               	bcf	status, 5	;RP0=0, select bank0
   324  07D2  1303               	bcf	status, 6	;RP1=0, select bank0
   325  07D3  0188               	clrf	(8)	;volatile
   326                           	line	61
   327                           ;LCD 4 BIT.c: 61: TRISC=0X00;
   328  07D4  1683               	bsf	status, 5	;RP0=1, select bank1
   329  07D5  1303               	bcf	status, 6	;RP1=0, select bank1
   330  07D6  0187               	clrf	(135)^080h	;volatile
   331                           	line	62
   332                           ;LCD 4 BIT.c: 62: PORTC=0X00;
   333  07D7  1283               	bcf	status, 5	;RP0=0, select bank0
   334  07D8  1303               	bcf	status, 6	;RP1=0, select bank0
   335  07D9  0187               	clrf	(7)	;volatile
   336                           	line	64
   337                           	
   338  07DA                     l2662:	
   339                           ;LCD 4 BIT.c: 64: Lcd_Intialization();
   340  07DA  120A  118A  273C   	fcall	_Lcd_Intialization
              120A  118A         
   341  07DF  2FE0               	goto	l2664
   342                           	line	66
   343                           ;LCD 4 BIT.c: 66: while(1)
   344                           	
   345  07E0                     l702:	
   346                           	line	68
   347                           	
   348  07E0                     l2664:	
   349                           ;LCD 4 BIT.c: 67: {
   350                           ;LCD 4 BIT.c: 68: Lcd_Command(0x80);
   351  07E0  3080               	movlw	(080h)
   352  07E1  120A  118A  2770   	fcall	_Lcd_Command
              120A  118A         
   353                           	line	69
   354                           	
   355  07E6                     l2666:	
   356                           ;LCD 4 BIT.c: 69: Lcd_String("LYCA SOFT");
   357  07E6  3001               	movlw	((STR_1-__stringbase))&0ffh
   358  07E7  120A  118A  274F   	fcall	_Lcd_String
              120A  118A         
   359                           	line	70
   360                           	
   361  07EC                     l2668:	
   362                           ;LCD 4 BIT.c: 70: Lcd_Command(0x1C);
   363  07EC  301C               	movlw	(01Ch)
   364  07ED  120A  118A  2770   	fcall	_Lcd_Command
              120A  118A         
   365                           	line	71
   366                           	
   367  07F2                     l2670:	
   368                           ;LCD 4 BIT.c: 71: _delay((unsigned long)((5)*(20e6/4000.0)));
   369                           	opt asmopt_off
   370  07F2  3021               movlw	33
   371  07F3  00F6               movwf	((??_main+0)+0+1),f
   372  07F4  3076               	movlw	118
   373  07F5  00F5               movwf	((??_main+0)+0),f
   374  07F6                     u2257:
   375  07F6  0BF5               	decfsz	((??_main+0)+0),f
   376  07F7  2FF6               	goto	u2257
   377  07F8  0BF6               	decfsz	((??_main+0)+0+1),f
   378  07F9  2FF6               	goto	u2257
   379  07FA  0064               	clrwdt
   380                           opt asmopt_on
   381                           
   382  07FB  2FE0               	goto	l2664
   383                           	line	72
   384                           	
   385  07FC                     l703:	
   386                           	line	66
   387  07FC  2FE0               	goto	l2664
   388                           	
   389  07FD                     l704:	
   390                           	line	73
   391                           	
   392  07FD                     l705:	
   393                           	global	start
   394  07FD  120A  118A  2800   	ljmp	start
   395                           	opt stack 0
   396                           GLOBAL	__end_of_main
   397  0800                     	__end_of_main:
   398 ;; =============== function _main ends ============
   399                           
   400                           	signat	_main,88
   401                           	global	_Lcd_Intialization
   402                           psect	text101,local,class=CODE,delta=2
   403                           global __ptext101
   404  073C                     __ptext101:
   405                           
   406 ;; *************** function _Lcd_Intialization *****************
   407 ;; Defined at:
   408 ;;		line 51 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;		None               void
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		_Lcd_Command
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           psect	text101
   436                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   437                           	line	51
   438                           	global	__size_of_Lcd_Intialization
   439  0013                     	__size_of_Lcd_Intialization	equ	__end_of_Lcd_Intialization-_Lcd_Intialization
   440                           	
   441  073C                     _Lcd_Intialization:	
   442                           	opt	stack 6
   443                           ; Regs used in _Lcd_Intialization: [wreg+status,2+status,0+pclath+cstack]
   444                           	line	52
   445                           	
   446  073C                     l2658:	
   447                           ;LCD 4 BIT.c: 52: Lcd_Command(0x02);
   448  073C  3002               	movlw	(02h)
   449  073D  120A  118A  2770   	fcall	_Lcd_Command
              120A  118A         
   450                           	line	53
   451                           ;LCD 4 BIT.c: 53: Lcd_Command(0x28);
   452  0742  3028               	movlw	(028h)
   453  0743  120A  118A  2770   	fcall	_Lcd_Command
              120A  118A         
   454                           	line	54
   455                           ;LCD 4 BIT.c: 54: Lcd_Command(0x0c);
   456  0748  300C               	movlw	(0Ch)
   457  0749  120A  118A  2770   	fcall	_Lcd_Command
              120A  118A         
   458                           	line	55
   459                           	
   460  074E                     l699:	
   461  074E  0008               	return
   462                           	opt stack 0
   463                           GLOBAL	__end_of_Lcd_Intialization
   464  074F                     	__end_of_Lcd_Intialization:
   465 ;; =============== function _Lcd_Intialization ends ============
   466                           
   467                           	signat	_Lcd_Intialization,88
   468                           	global	_Lcd_String
   469                           psect	text102,local,class=CODE,delta=2
   470                           global __ptext102
   471  074F                     __ptext102:
   472                           
   473 ;; *************** function _Lcd_String *****************
   474 ;; Defined at:
   475 ;;		line 43 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  Str             1    wreg     PTR const unsigned char 
   478 ;;		 -> STR_1(10), 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  Str             1    4[COMMON] PTR const unsigned char 
   481 ;;		 -> STR_1(10), 
   482 ;; Return value:  Size  Location     Type
   483 ;;		None               void
   484 ;; Registers used:
   485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         1       0       0       0       0
   493 ;;      Temps:          1       0       0       0       0
   494 ;;      Totals:         2       0       0       0       0
   495 ;;Total ram usage:        2 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		_Lcd_Data
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           psect	text102
   505                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   506                           	line	43
   507                           	global	__size_of_Lcd_String
   508  0021                     	__size_of_Lcd_String	equ	__end_of_Lcd_String-_Lcd_String
   509                           	
   510  074F                     _Lcd_String:	
   511                           	opt	stack 6
   512                           ; Regs used in _Lcd_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   513                           ;Lcd_String@Str stored from wreg
   514  074F  00F4               	movwf	(Lcd_String@Str)
   515                           	line	44
   516                           	
   517  0750                     l2650:	
   518                           ;LCD 4 BIT.c: 44: while(*Str != 0)
   519  0750  2F62               	goto	l2656
   520                           	
   521  0751                     l694:	
   522                           	line	46
   523                           	
   524  0751                     l2652:	
   525                           ;LCD 4 BIT.c: 45: {
   526                           ;LCD 4 BIT.c: 46: Lcd_Data(*Str++);
   527  0751  0874               	movf	(Lcd_String@Str),w
   528  0752  0084               	movwf	fsr0
   529  0753  120A  118A  2003   	fcall	stringdir
              120A  118A         
   530  0758  120A  118A  279F   	fcall	_Lcd_Data
              120A  118A         
   531                           	
   532  075D                     l2654:	
   533  075D  3001               	movlw	(01h)
   534  075E  00F3               	movwf	(??_Lcd_String+0)+0
   535  075F  0873               	movf	(??_Lcd_String+0)+0,w
   536  0760  07F4               	addwf	(Lcd_String@Str),f
   537  0761  2F62               	goto	l2656
   538                           	line	47
   539                           	
   540  0762                     l693:	
   541                           	line	44
   542                           	
   543  0762                     l2656:	
   544  0762  0874               	movf	(Lcd_String@Str),w
   545  0763  0084               	movwf	fsr0
   546  0764  120A  118A  2003   	fcall	stringdir
              120A  118A         
   547  0769  3800               	iorlw	0
   548  076A  1D03               	skipz
   549  076B  2F6D               	goto	u2241
   550  076C  2F6E               	goto	u2240
   551  076D                     u2241:
   552  076D  2F51               	goto	l2652
   553  076E                     u2240:
   554  076E  2F6F               	goto	l696
   555                           	
   556  076F                     l695:	
   557                           	line	48
   558                           	
   559  076F                     l696:	
   560  076F  0008               	return
   561                           	opt stack 0
   562                           GLOBAL	__end_of_Lcd_String
   563  0770                     	__end_of_Lcd_String:
   564 ;; =============== function _Lcd_String ends ============
   565                           
   566                           	signat	_Lcd_String,4216
   567                           	global	_Lcd_Data
   568                           psect	text103,local,class=CODE,delta=2
   569                           global __ptext103
   570  079F                     __ptext103:
   571                           
   572 ;; *************** function _Lcd_Data *****************
   573 ;; Defined at:
   574 ;;		line 28 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  Data            1    wreg     const unsigned char 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  Data            1    2[COMMON] const unsigned char 
   579 ;; Return value:  Size  Location     Type
   580 ;;		None               void
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         1       0       0       0       0
   590 ;;      Temps:          2       0       0       0       0
   591 ;;      Totals:         3       0       0       0       0
   592 ;;Total ram usage:        3 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_Lcd_String
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           psect	text103
   601                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   602                           	line	28
   603                           	global	__size_of_Lcd_Data
   604  002F                     	__size_of_Lcd_Data	equ	__end_of_Lcd_Data-_Lcd_Data
   605                           	
   606  079F                     _Lcd_Data:	
   607                           	opt	stack 6
   608                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0]
   609                           ;Lcd_Data@Data stored from wreg
   610  079F  00F2               	movwf	(Lcd_Data@Data)
   611                           	line	29
   612                           	
   613  07A0                     l2630:	
   614                           ;LCD 4 BIT.c: 29: PORTD = (Data & 0XF0);
   615  07A0  0872               	movf	(Lcd_Data@Data),w
   616  07A1  39F0               	andlw	0F0h
   617  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
   618  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
   619  07A4  0088               	movwf	(8)	;volatile
   620                           	line	30
   621                           	
   622  07A5                     l2632:	
   623                           ;LCD 4 BIT.c: 30: RD2 = 1;
   624  07A5  1508               	bsf	(66/8),(66)&7
   625                           	line	31
   626                           	
   627  07A6                     l2634:	
   628                           ;LCD 4 BIT.c: 31: RD3 = 1;
   629  07A6  1588               	bsf	(67/8),(67)&7
   630                           	line	32
   631                           	
   632  07A7                     l2636:	
   633                           ;LCD 4 BIT.c: 32: _delay((unsigned long)((5)*(20e6/4000.0)));
   634                           	opt asmopt_off
   635  07A7  3021               movlw	33
   636  07A8  00F1               movwf	((??_Lcd_Data+0)+0+1),f
   637  07A9  3076               	movlw	118
   638  07AA  00F0               movwf	((??_Lcd_Data+0)+0),f
   639  07AB                     u2267:
   640  07AB  0BF0               	decfsz	((??_Lcd_Data+0)+0),f
   641  07AC  2FAB               	goto	u2267
   642  07AD  0BF1               	decfsz	((??_Lcd_Data+0)+0+1),f
   643  07AE  2FAB               	goto	u2267
   644  07AF  0064               	clrwdt
   645                           opt asmopt_on
   646                           
   647                           	line	33
   648                           	
   649  07B0                     l2638:	
   650                           ;LCD 4 BIT.c: 33: RD3 = 0;
   651  07B0  1283               	bcf	status, 5	;RP0=0, select bank0
   652  07B1  1303               	bcf	status, 6	;RP1=0, select bank0
   653  07B2  1188               	bcf	(67/8),(67)&7
   654                           	line	35
   655                           	
   656  07B3                     l2640:	
   657                           ;LCD 4 BIT.c: 35: PORTD = ((Data<<4) & 0xF0);
   658  07B3  0872               	movf	(Lcd_Data@Data),w
   659  07B4  00F0               	movwf	(??_Lcd_Data+0)+0
   660  07B5  3003               	movlw	(04h)-1
   661  07B6                     u2235:
   662  07B6  1003               	clrc
   663  07B7  0DF0               	rlf	(??_Lcd_Data+0)+0,f
   664  07B8  3EFF               	addlw	-1
   665  07B9  1D03               	skipz
   666  07BA  2FB6               	goto	u2235
   667  07BB  1003               	clrc
   668  07BC  0D70               	rlf	(??_Lcd_Data+0)+0,w
   669  07BD  39F0               	andlw	0F0h
   670  07BE  0088               	movwf	(8)	;volatile
   671                           	line	36
   672                           	
   673  07BF                     l2642:	
   674                           ;LCD 4 BIT.c: 36: RD2 = 1;
   675  07BF  1508               	bsf	(66/8),(66)&7
   676                           	line	37
   677                           	
   678  07C0                     l2644:	
   679                           ;LCD 4 BIT.c: 37: RD3 = 1;
   680  07C0  1588               	bsf	(67/8),(67)&7
   681                           	line	38
   682                           	
   683  07C1                     l2646:	
   684                           ;LCD 4 BIT.c: 38: _delay((unsigned long)((5)*(20e6/4000.0)));
   685                           	opt asmopt_off
   686  07C1  3021               movlw	33
   687  07C2  00F1               movwf	((??_Lcd_Data+0)+0+1),f
   688  07C3  3076               	movlw	118
   689  07C4  00F0               movwf	((??_Lcd_Data+0)+0),f
   690  07C5                     u2277:
   691  07C5  0BF0               	decfsz	((??_Lcd_Data+0)+0),f
   692  07C6  2FC5               	goto	u2277
   693  07C7  0BF1               	decfsz	((??_Lcd_Data+0)+0+1),f
   694  07C8  2FC5               	goto	u2277
   695  07C9  0064               	clrwdt
   696                           opt asmopt_on
   697                           
   698                           	line	39
   699                           	
   700  07CA                     l2648:	
   701                           ;LCD 4 BIT.c: 39: RD3 = 0;
   702  07CA  1283               	bcf	status, 5	;RP0=0, select bank0
   703  07CB  1303               	bcf	status, 6	;RP1=0, select bank0
   704  07CC  1188               	bcf	(67/8),(67)&7
   705                           	line	40
   706                           	
   707  07CD                     l690:	
   708  07CD  0008               	return
   709                           	opt stack 0
   710                           GLOBAL	__end_of_Lcd_Data
   711  07CE                     	__end_of_Lcd_Data:
   712 ;; =============== function _Lcd_Data ends ============
   713                           
   714                           	signat	_Lcd_Data,4216
   715                           	global	_Lcd_Command
   716                           psect	text104,local,class=CODE,delta=2
   717                           global __ptext104
   718  0770                     __ptext104:
   719                           
   720 ;; *************** function _Lcd_Command *****************
   721 ;; Defined at:
   722 ;;		line 13 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  cmd             1    wreg     const unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  cmd             1    2[COMMON] const unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;		None               void
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          2       0       0       0       0
   739 ;;      Totals:         3       0       0       0       0
   740 ;;Total ram usage:        3 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_Lcd_Intialization
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           psect	text104
   750                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\12-LCD 4 BIT\CODE\LCD 4 BIT.c"
   751                           	line	13
   752                           	global	__size_of_Lcd_Command
   753  002F                     	__size_of_Lcd_Command	equ	__end_of_Lcd_Command-_Lcd_Command
   754                           	
   755  0770                     _Lcd_Command:	
   756                           	opt	stack 7
   757                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
   758                           ;Lcd_Command@cmd stored from wreg
   759  0770  00F2               	movwf	(Lcd_Command@cmd)
   760                           	line	14
   761                           	
   762  0771                     l2610:	
   763                           ;LCD 4 BIT.c: 14: PORTD = (cmd & 0XF0);
   764  0771  0872               	movf	(Lcd_Command@cmd),w
   765  0772  39F0               	andlw	0F0h
   766  0773  1283               	bcf	status, 5	;RP0=0, select bank0
   767  0774  1303               	bcf	status, 6	;RP1=0, select bank0
   768  0775  0088               	movwf	(8)	;volatile
   769                           	line	15
   770                           	
   771  0776                     l2612:	
   772                           ;LCD 4 BIT.c: 15: RD2 = 0;
   773  0776  1108               	bcf	(66/8),(66)&7
   774                           	line	16
   775                           	
   776  0777                     l2614:	
   777                           ;LCD 4 BIT.c: 16: RD3 = 1;
   778  0777  1588               	bsf	(67/8),(67)&7
   779                           	line	17
   780                           	
   781  0778                     l2616:	
   782                           ;LCD 4 BIT.c: 17: _delay((unsigned long)((5)*(20e6/4000.0)));
   783                           	opt asmopt_off
   784  0778  3021               movlw	33
   785  0779  00F1               movwf	((??_Lcd_Command+0)+0+1),f
   786  077A  3076               	movlw	118
   787  077B  00F0               movwf	((??_Lcd_Command+0)+0),f
   788  077C                     u2287:
   789  077C  0BF0               	decfsz	((??_Lcd_Command+0)+0),f
   790  077D  2F7C               	goto	u2287
   791  077E  0BF1               	decfsz	((??_Lcd_Command+0)+0+1),f
   792  077F  2F7C               	goto	u2287
   793  0780  0064               	clrwdt
   794                           opt asmopt_on
   795                           
   796                           	line	18
   797                           	
   798  0781                     l2618:	
   799                           ;LCD 4 BIT.c: 18: RD3 = 0;
   800  0781  1283               	bcf	status, 5	;RP0=0, select bank0
   801  0782  1303               	bcf	status, 6	;RP1=0, select bank0
   802  0783  1188               	bcf	(67/8),(67)&7
   803                           	line	20
   804                           	
   805  0784                     l2620:	
   806                           ;LCD 4 BIT.c: 20: PORTD = ((cmd<<4) & 0xF0);
   807  0784  0872               	movf	(Lcd_Command@cmd),w
   808  0785  00F0               	movwf	(??_Lcd_Command+0)+0
   809  0786  3003               	movlw	(04h)-1
   810  0787                     u2225:
   811  0787  1003               	clrc
   812  0788  0DF0               	rlf	(??_Lcd_Command+0)+0,f
   813  0789  3EFF               	addlw	-1
   814  078A  1D03               	skipz
   815  078B  2F87               	goto	u2225
   816  078C  1003               	clrc
   817  078D  0D70               	rlf	(??_Lcd_Command+0)+0,w
   818  078E  39F0               	andlw	0F0h
   819  078F  0088               	movwf	(8)	;volatile
   820                           	line	21
   821                           	
   822  0790                     l2622:	
   823                           ;LCD 4 BIT.c: 21: RD2 = 0;
   824  0790  1108               	bcf	(66/8),(66)&7
   825                           	line	22
   826                           	
   827  0791                     l2624:	
   828                           ;LCD 4 BIT.c: 22: RD3 = 1;
   829  0791  1588               	bsf	(67/8),(67)&7
   830                           	line	23
   831                           	
   832  0792                     l2626:	
   833                           ;LCD 4 BIT.c: 23: _delay((unsigned long)((5)*(20e6/4000.0)));
   834                           	opt asmopt_off
   835  0792  3021               movlw	33
   836  0793  00F1               movwf	((??_Lcd_Command+0)+0+1),f
   837  0794  3076               	movlw	118
   838  0795  00F0               movwf	((??_Lcd_Command+0)+0),f
   839  0796                     u2297:
   840  0796  0BF0               	decfsz	((??_Lcd_Command+0)+0),f
   841  0797  2F96               	goto	u2297
   842  0798  0BF1               	decfsz	((??_Lcd_Command+0)+0+1),f
   843  0799  2F96               	goto	u2297
   844  079A  0064               	clrwdt
   845                           opt asmopt_on
   846                           
   847                           	line	24
   848                           	
   849  079B                     l2628:	
   850                           ;LCD 4 BIT.c: 24: RD3 = 0;
   851  079B  1283               	bcf	status, 5	;RP0=0, select bank0
   852  079C  1303               	bcf	status, 6	;RP1=0, select bank0
   853  079D  1188               	bcf	(67/8),(67)&7
   854                           	line	25
   855                           	
   856  079E                     l687:	
   857  079E  0008               	return
   858                           	opt stack 0
   859                           GLOBAL	__end_of_Lcd_Command
   860  079F                     	__end_of_Lcd_Command:
   861 ;; =============== function _Lcd_Command ends ============
   862                           
   863                           	signat	_Lcd_Command,4216
   864                           psect	text105,local,class=CODE,delta=2
   865                           global __ptext105
   866  0000                     __ptext105:
   867                           	global	btemp
   868  007E                     	btemp set 07Eh
   869                           
   870                           	DABS	1,126,2	;btemp
   871                           	global	wtemp0
   872  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Oct 24 13:54:19 2018

                         pc 0002                          _RD 0C60                          _WR 0C61  
                        fsr 0004                         l702 07E0                         l703 07FC  
                       l704 07FD                         l705 07FD                         l690 07CD  
                       l693 0762                         l694 0751                         l687 079E  
                       l695 076F                         l696 076F                         l699 074E  
                       _GIE 005F                         _RD2 0042                         _RD3 0043  
                       fsr0 0004         __end_of_Lcd_Command 079F                        l2610 0771  
                      l2620 0784                        l2612 0776                        l2622 0790  
                      l2614 0777                        l2630 07A0                        l2624 0791  
                      l2616 0778                        l2640 07B3                        l2632 07A5  
                      l2626 0792                        l2618 0781                        l2642 07BF  
                      l2634 07A6                        l2650 0750                        l2628 079B  
                      l2644 07C0                        l2636 07A7                        l2652 0751  
                      l2660 07CE                        l2646 07C1                        l2638 07B0  
                      l2654 075D                        l2670 07F2                        l2662 07DA  
                      l2648 07CA                        l2656 0762                        l2664 07E0  
                      l2658 073C                        l2666 07E6                        l2668 07EC  
                      STR_1 0009                        u2240 076E                        u2225 0787  
                      u2241 076D                        u2235 07B6                        u2257 07F6  
                      u2267 07AB                        u2277 07C5                        u2287 077C  
                      u2297 0796                        _WREN 0C62                        _main 07CE  
                      btemp 007E                        start 0000                  _Lcd_String 074F  
                     ?_main 0070                       _EEADR 010D                       _CARRY 0018  
                     _PORTC 0007                       _PORTD 0008                       _TRISC 0087  
                     _TRISD 0088                       pclath 000A                       status 0003  
                     wtemp0 007E            __end_of_Lcd_Data 07CE                __end_of_main 0800  
         _Lcd_Intialization 073C          ?_Lcd_Intialization 0070                 _Lcd_Command 0770  
                    ??_main 0075         ??_Lcd_Intialization 0073                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D   __end_of_Lcd_Intialization 074F  
               ?_Lcd_String 0070              __pcstackCOMMON 0070                   ?_Lcd_Data 0070  
       __size_of_Lcd_String 0021  __size_of_Lcd_Intialization 0013                  __pmaintext 07CE  
                ??_Lcd_Data 0070                ?_Lcd_Command 0070        end_of_initialization 0738  
              ??_Lcd_String 0073          __end_of_Lcd_String 0770         start_initialization 0738  
         __size_of_Lcd_Data 002F        __size_of_Lcd_Command 002F               Lcd_String@Str 0074  
                 __ptext100 0000                   __ptext101 073C                   __ptext102 074F  
                 __ptext103 079F                   __ptext104 0770                   __ptext105 0000  
                 __pstrings 0003                Lcd_Data@Data 0072                 __stringbase 0008  
                  _Lcd_Data 079F               __size_of_main 0032                   stringcode 0003  
             ??_Lcd_Command 0070              Lcd_Command@cmd 0072                    stringdir 0003  
                  stringtab 0003  
